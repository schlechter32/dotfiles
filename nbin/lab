#!/bin/bash

ssh_base_command="ssh"

mosh_list=("cobra")
if [[ " ${mosh_list[@]} " =~ " $initial_host " ]]; then
    ssh_base_command="ssh"
fi
while [[ $# -gt 0 ]]; do
    case $1 in
        -p) ssh_base_command+=" -p $2"; shift ;;
        -l) ssh_base_command+=" -l $2"; shift ;;
        -i) ssh_base_command+=" -i $2"; shift ;;
        -X) ssh_base_command+=" -X" ;;
        -N) ssh_base_command+=" -N" ;;
        -N) ssh_base_command+=" -N" ;;
        -L) ssh_base_command+=" -L $2:localhost:$2"; shift;;
        -C) ssh_base_command+=" -C" ;;
        -D) ssh_base_command+=" -D $2"; shift;;
        *) break ;;
    esac
    shift
done
initial_host=$1
lab_list=("smart" "netserv2" "netserv1" "cobra" "cobra2" "netlabdesk2")
ikr_cent_list=("cnode01" "ingress" "cnode09")

get_ssh_config_block() {
    local initial_host="$1"
    local config=$(awk -v host="$initial_host" '
        BEGIN { found = 0; print_block = 0; }
        /^Host / {  # This regex matches lines that exactly start with "Host " followed by a space
            if ($2 == host) {
                found = 1;  # Start of the desired host block
                print_block = 1;  # Enable printing
            } else if (found) {
                print_block = 0;  # If another host block starts and weve already found our block, stop printing
                exit;  # Exit the program as were done printing the desired block
            }
        }
        print_block { print; }  # Print lines of the current block
        ' ~/.ssh/config)
    
    if [ -n "$config" ]; then
        echo "$config"
    else
        echo "No configuration found for host: $initial_host"
    fi
}
config=$(get_ssh_config_block "$initial_host")
hostname_var=$(echo "$config" | grep -o "HostName [^ ]*" | awk '{print $2}')
# Get password from secure storage on macOS
if [[ " ${lab_list[@]} " =~ " $initial_host " ]]; then
  echo "host on lab list"
  if [ $(uname) == "Darwin" ]; then
    echo "On mac so using docker to execute knock"
    # ~/nbin/libscripts/docker_knock_lab $initial_host
    ~/nbin/libscripts/knock_lab_mac --target "$hostname_var"
  else 
    ~/nbin/libscripts/knock_lab --target "$hostname_var"
  fi
fi

if [[ " ${ikr_cent_list[@]} " =~ " $initial_host " ]]; then
  echo "host on ikr"
  if [ $(uname) == "Darwin" ]; then
    # echo "On mac so using docker to execute knock"
    ~/nbin/knock_ikr_mac
  else 
    ~/nbin/libscripts/knock_ikr_linux
  fi
fi
sshcommand="$ssh_base_command $initial_host"
$sshcommand
